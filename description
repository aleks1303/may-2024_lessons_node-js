Створення токенів
1. Є точка входу в auth.router в sign-in
User створений і існує в системі, ми хочемо отримати токени, щоб оновлювати, редагувати, видаляти користувача

2. Переходимо в auth.controller
-дістали body ( це email та password)

3. прокинули ці данні sign-in в auth.service
- service знайшов користувача по email (const user = await userRepository.getByEmail(dto.email));
- метод compare перевіряє користувача на його пароль (хеш)
- якщо пароль співпали ідемо далі
- далі через бібліотеку (libka - library) jsonwebtoken - генеруємо токени ( маркери)
- конкретним користувачам видаємо токени, через які пізніше, будемо розуміти хто приходить на сайт
- з токенами люди приходять frontend на нашу api, на закриті endpoints
- якщо endpoint закритий він буде вимагати token
- цей токен буди ідентифікувати по токену, який ми видали

4. Переходимо на token.service
- відбувається генерація токену ("generateTokens")
- є payload, це те, що ми хочемо покласти в нашого користувача
- згенерувався токен
- щоб згенерувати токен підписуємо його secret, який формуємо самі в файлі .env
(accesstoken підписуємо одним secret, refreshtoken підписуємо іншим secret)
- його можна подивитись на сайті і перевірити (https://jwt.io/)
- payload користувача не приховується там може бути id або навіть email
- під час генерації створили два токени і повернули їх звідси

5. Переходимо до auth.service
- tokens - згенерували токени
- два jwt tokens (const tokens) зберегли в базу даних і прив'язали їх до конкретного користувача
(await tokenRepository.create({ ...tokens, _userId: user._id });)
- _userId: user._id - це власник двох токенів (маркери) і він може використовувати ці токени, щоб ходити до нас.